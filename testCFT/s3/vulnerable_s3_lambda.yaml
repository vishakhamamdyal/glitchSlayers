AWSTemplateFormatVersion: '2010-09-09'
Description: S3 bucket restricted access, Lambda with secure environment variable
Resources:
  SecureLambda:
    Properties:
      Code:
        ZipFile: "def handler(event, context):\n    api_key = '{{resolve:ssm:secureParameter:1}}'\n\
          \    print(\"Secure Function\")\n"
      FunctionName: SecureFunction
      Handler: index.handler
      Role:
        Fn::GetAtt: LambdaExecutionRole.Arn
      Runtime: python3.9
      Environment:
        Variables:
          secureParameter: '{{resolve:ssm:secureParameter:1}}'
    Type: AWS::Lambda::Function
  LambdaExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        Version: '2012-10-17'
      Policies:
      - PolicyDocument:
          Statement:
          - Action: logs:CreateLogGroup
            Effect: Allow
            Resource: arn:aws:logs:*:*:*
          - Action: logs:CreateLogStream
            Effect: Allow
            Resource: arn:aws:logs:*:*:*/*
          - Action: logs:PutLogEvents
            Effect: Allow
            Resource: arn:aws:logs:*:*:*/*
          PolicyName: CloudWatchLogsPolicy
      RoleName: lambda-role
    Type: AWS::IAM::Role
  PublicS3Bucket:
    Properties:
      AccessControl: Private
    Type: AWS::S3::Bucket
